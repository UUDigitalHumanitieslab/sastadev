Deviant Language
================

The input for SASTA contains a lot of deviant language. Language is of course deviant when it does not adhere to the rules of the Dutch language. 
But since in SASTA Alpino is the approximation of these rules, what really counts as deviant is what is deviant relative to the Alpino grammar. We will see several examples of this below.

Deviant language can be avoided by using CHAT-annotations. But CHAT-annotations are not always used, and even if they are  used, they are not used 
systematically and consistently. 

We will first describe the general strategy that SASTA follows to deal with deviant language.

General Strategy
----------------


We first give a global overview of the strategy followed, and illustrate it with a simple example. This involves the following steps:

#. It is assumed that the whole sample has been parsed as is, and has resulted in a treebank.
#. An attempt is made to identify a deviant configuration in each utterance in the treebank that has to be analysed. This is usually done by identifying specific patterns in the input string. The procedure can also investigate the syntactic structure, and this is used, but its use is limited because the syntactic structure is usually not very informative exactly because of the deviancy in the utterance. For example, in the utterance *bij die varken*, SASTA should identify deviant language (the *de*-word *die* is immediately followed by a *het*-word (*varken*).
#. SASTA attempt to make a correction, or even multiple alternative corrections. So *bij die varken* is replaced by *bij dat varken*, with *die* replaced by *dat*. SASTA also adds metadata to reflect this correction. These corrections can involve replacements of one word by another word, insertions of a word, deletions of a word or word sequence, or expansion of a word into a sequence of words. Of course, multiple corrections can be applied to a single utterance.
#. SASTA parses the corrected utterance(s).
#. It then evaluates the original and corrected utterances, by a complex evaluation measure, which involves inter alia the degree of grammatical cohesion, the number of deviant configurations present, and the number of unknown words present.
#. SASTA selects the best one, with its metadata
#. SASTA then replaces the corrections by the original words, sometimes with the properties of the original word in the parse of the corrected utterance. In the example, the correction *dat* is replaced by the original word *die* (and its grammatical properties), so that the utterance has the syntactic structure of the utterance  *bij dat varken*, but contains the word *die* (with its properties) instead of *dat* (and its properties).
#. The grammatical analysis of the relevant method is applied, in the normal way.  
#. SASTA generates, on the basis of the metadata produced,  an error report, which specifies each error that has been found, how it has been corrected, and some additional information.
#. SASTA also generates an error logging file, which specifies all the alternatives that have been considered, and which one is considered the best one according to the evaluation criterion.

A corrected treebank is generated by a call in *sastadev* to the function *correcttreebank* in the module *correcttreebank*:

.. autofunction:: correcttreebank::correcttreebank

Each syntactic structure in the input treebank is corrected by the function *correct_stree* in the module *correcttreebank*.

.. autofunction:: correcttreebank::correct_stree

Since in the corrected utterance multiple words may have to be inserted or removed, and since the linear order in Alpino syntactic structures is indicated by means of *begin* and *end* attributes (see :ref:`alpinoparser`), SASTA uses "inflated" syntactic structures, i.e syntactic structures in which the *begin* attribute of the first original word has the value *'10'*, and the *begin* attribute of the next word has the value *'20'*. The values of the *end* attribute are equal to str(int(begin) + 1 ), as usual. This enables one to delete and insert nodes for words without having to adapt the *begin* and *end* values of each node. Inflating a syntactic structure in this way is done by the function *treeinflate* in the module treebankfunctions.

.. autofunction:: treebankfunctions::treeinflate

Various Types of Deviant Language 
---------------------------------

Deviant language occurs in many different forms. We discuss the most important ones here.


Deviant Transcriptions
^^^^^^^^^^^^^^^^^^^^^^

We give the transcription, the correct transcription after a slash, a translation between round brackets, 
the reason why the transcription is deviant, and how and where this is dealt with

Final n not pronounced after schwa
""""""""""""""""""""""""""""""""""

Example: *mouwe* /	*mouwen* (sleeves): This is dealt with in the function *getalternativetokenmds* in the module corrector.

Dee
"""

The string *dee* must sometimes be interpreted as *deze* (this), sometimes as *deed* (did). Both alternatives are generated in the function *getalternativetokenmds* in the module corrector.

Moe
"""

The string *moe* must sometimes be interpreted literally  as *moe* (tired), sometimes as *moet* (must). If *moe* is used as *moet* in an utterance, Alpino usually cannot make anything of it.  We have defined a query to identify occurrences of *moe* that has no grammatical connections, and then replace it with *moet* as one alternative. 

Verb form + *ie* written as one word
""""""""""""""""""""""""""""""""""""

Example: *gaatie*	/ *gaat ie* (goes he): probably written as one word because it is pronounced as one word. This is dealt with by the *gaatie* function in the corrector module:

  * .. autofunction:: corrector::gaatie

Dehyphenation
"""""""""""""
* *zie-ken-huis* / *ziekenhuis* (hospital):	syllables pronounced separately (used mostly in ASTA). This is dealt with in  the function *getalternativetokenmds* in the module corrector by a call to the function fullworddehyphenate:

   * .. autofunction:: stringfunctions::fullworddehyphenate 


(Regional) informal spoken language
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

*ie*-diminutives
""""""""""""""""
.. automodule::  iedims




Incorrect possessive pronouns
"""""""""""""""""""""""""""""

Wrong pronunciation of content words in the transcript
""""""""""""""""""""""""""""""""""""""""""""""""""""""

.. _smallclauses:

Small clauses
"""""""""""""

@@to be added@@